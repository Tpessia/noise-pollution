var app=angular.module("noisePolution",["ngRoute","youtube-embed","angularFileUpload"]);app.config(function($routeProvider,$locationProvider){$routeProvider.when("/",{title:"",controller:"HomeController",templateUrl:"app/home/home.partial.html"}).when("/tracks",{title:"Tracks",controller:"TracksController",templateUrl:"app/tracks/tracks.partial.html"}).when("/artists",{title:"Artists",controller:"ArtistsController",templateUrl:"app/artists/artists.partial.html"}).when("/albums",{title:"Albums",controller:"AlbumsController",templateUrl:"app/albums/albums.partial.html"}).when("/user/playlists",{title:"User Playlists",controller:"UserPlaylistsController",templateUrl:"app/userplaylists/userplaylists.partial.html",reloadOnSearch:!1}).when("/user",{title:"User Settings",controller:"UserSettingsController",templateUrl:"app/usersettings/usersettings.partial.html"}).otherwise({redirectTo:"/"})}),app.run(function($rootScope,$window,$timeout){$rootScope.$on("$routeChangeSuccess",function($event,current,previous){$rootScope.title=current.$$route.title,$rootScope.titleClass=""==current.$$route.title?"home":current.$$route.title.toLowerCase().replace(/ /g,""),void 0!==previous&&current.$$route.originalPath!=previous.$$route.originalPath&&scrollTo(0,10)}),$rootScope.baseUrl=$window.location.pathname.substring(0,$window.location.pathname.lastIndexOf("/"))+"/",$rootScope.fallbackImg=$rootScope.baseUrl+"assets/img/logo-simple-512x512.png",$rootScope.materialize={headerDropdown:function(){return M.Dropdown.init($$("#user-dropdown")[0],{alignment:"right"})},sidenav:function(){var instance=M.Sidenav.getInstance($$(".sidenav")[0]),sidenav=void 0===instance?M.Sidenav.init($$(".sidenav")[0],{}):instance;return angular.element($$(".sidenav li:not(.init), .user-view a:not(.init)")).on("click",function(){sidenav.close()}).addClass("init"),sidenav},all:function(){return{headerDropdown:this.headerDropdown(),sidenav:this.sidenav()}}},$timeout(function(){$rootScope.materialize.all()},10),angular.get=function(injector){return angular.element(document.body).injector().get(injector)}}),app.controller("BreadcrumbController",function($rootScope,$scope,$location){$rootScope.$on("$routeChangeSuccess",function(event,current,previous){var breadcrumbItems=current.$$route.originalPath.split(/\//g).filter(function(e){return""!=e});for(var i in 0==breadcrumbItems.length?breadcrumbItems[0]="home":breadcrumbItems.unshift("home"),$scope.breadcrumb=[],breadcrumbItems)$scope.breadcrumb.push({name:breadcrumbItems[i],path:"#!/"+breadcrumbItems.filter(function(e,index){return index<=i}).filter(function(e){return"home"!=e}).join("/")})})}),app.directive("breadcrumb",function(){return{controller:"BreadcrumbController",templateUrl:"app/_directives/breadcrumb/breadcrumb.partial.html"}}),app.controller("ByCountryController",function($rootScope,$scope,$q,geoService,tracksService,artistsService){var dft_page=1,dft_limit=5;$scope.countries=geoService.countries,function(){var countriesArr=[],j=0;for(var i in $scope.countries)countriesArr[j]={name:i},j++;$scope.countriesSearch=new Fuse(countriesArr,{shouldSort:!0,threshold:.3,location:0,distance:100,maxPatternLength:32,minMatchCharLength:1,keys:["name"]})}(),$scope.getTracksByCountry=function(country,page,limit){if(void 0===page)page=dft_page;if(void 0===limit)limit=dft_limit;var progressBar=$$(".country .progress");angular.element(progressBar).removeClass("hide");var countryCode=$scope.countries[country];void 0!==$scope.tracksCountryAbort&&$scope.tracksCountryAbort.resolve(),$scope.tracksCountryAbort=$q.defer(),geoService.getTracksByCountry(countryCode,page,limit,$scope.tracksCountryAbort.promise).then(function(response){if(angular.element(progressBar).removeClass("artists-complete").addClass("hide"),void 0===response.data.error)for(var i in $scope.crountryTracks=response.data.tracks.track.slice(-limit),$scope.crountryTracks)!function(j){tracksService.getTrackInfo($scope.crountryTracks[j].artist.name,$scope.crountryTracks[j].name,$scope.tracksCountryAbort.promise).then(function(response){void 0===response.data.error?void 0!==response.data.track&&($scope.crountryTracks[j].info=response.data.track,void 0!==response.data.track.album&&""!=response.data.track.album.image[0]["#text"]&&($scope.crountryTracks[j].image=response.data.track.album.image)):console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)}).finally(function(){0<$scope.crountryTracks.length&&"undefined"!==$scope.crountryTracks[j].image&&""==$scope.crountryTracks[j].image[0]["#text"]&&($scope.crountryTracks[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.crountryTracks[j].imgsDone=!0})}(i);else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)})},$scope.getArtistsByCountry=function(country,page,limit){if(void 0===page)page=dft_page;if(void 0===limit)limit=dft_limit;var countryCode=$scope.countries[country];void 0!==$scope.artistsCountryAbort&&$scope.artistsCountryAbort.resolve(),$scope.artistsCountryAbort=$q.defer(),geoService.getArtistsByCountry(countryCode,page,limit,$scope.artistsCountryAbort.promise).then(function(response){if(void 0===response.data.error)for(var i in $scope.crountryArtists=response.data.topartists.artist.slice(-limit),$scope.crountryArtists)!function(j){artistsService.getArtistInfo($scope.crountryArtists[j].name,$scope.artistsCountryAbort.promise).then(function(response){void 0===response.data.error?void 0!==response.data.artist&&($scope.crountryArtists[j].info=response.data.artist,void 0!==response.data.artist.image&&""!=response.data.artist.image[0]["#text"]&&($scope.crountryArtists[j].image=response.data.artist.image)):console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)}).finally(function(){0<$scope.crountryArtists.length&&"undefined"!==$scope.crountryArtists[j].image&&""==$scope.crountryArtists[j].image[0]["#text"]&&($scope.crountryArtists[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.crountryArtists[j].imgsDone=!0})}(i);else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)})},$scope.getAllByCountry=function(){$scope.getTracksByCountry($scope.currentCountry),$scope.getArtistsByCountry($scope.currentCountry)},geoService.getUserLocation().then(function(response){try{void 0===response.data.error?$scope.currentCountry=$scope.tempCurrentCountry=geoService.alfa2ToName[response.data.country]:(console.log(response),$scope.currentCountry=$scope.tempCurrentCountry="United States of America")}catch(e){console.log(response),$scope.currentCountry=$scope.tempCurrentCountry="United States of America"}},function(errResponse){console.log(errResponse),$scope.currentCountry=$scope.tempCurrentCountry="United States of America"}).finally(function(){$scope.getAllByCountry()}),$scope.searchByCountry=function(country){if(-1==$scope.instances.autocomplete[0].activeIndex){$$("[by-country] .autocomplete")[0].blur();var result=$scope.countriesSearch.search(country);0<result.length?($scope.currentCountry=$scope.tempCurrentCountry=result[0].name,$scope.getAllByCountry()):M.toast({html:"Invalid country",classes:"red darken-4",displayLength:"2000"})}},$scope.stripLink=function(text){return text.replace(/<a(.|\n)*?<\/a>.?/,"").trim()},$scope.getSummaryLink=function(text){return text.match(/<a(.|\n)*?<\/a>/)[0].match(/href="(.|\n)*?"/)[0].replace('href="',"").replace('"',"")},$scope.searchFor=function(type,value){var encodedValue=encodeURIComponent(value);switch(type){case"track":return $rootScope.baseUrl+"#!/tracks?search="+encodedValue;case"artist":return $rootScope.baseUrl+"#!/artists?search="+encodedValue;case"album":return $rootScope.baseUrl+"#!/albums?search="+encodedValue;default:throw'Invalid video type "'+type+'"'}},$scope.backToTop=function(){scrollTo($$(".country .tabs")[0].offsetTop-$$("nav")[0].offsetHeight,600)}}),app.directive("byCountry",function(){return{controller:"ByCountryController",templateUrl:"app/_directives/by-country/by-country.partial.html",link:function(scope,element,attrs,geoService){var autoCountries={};for(var i in scope.countries)autoCountries[i]=null;scope.instances={tabs:M.Tabs.init($$(".tabs"),{swipeable:!0}),autocomplete:M.Autocomplete.init($$(".autocomplete"),{data:autoCountries,limit:3,onAutocomplete:function(country){$$("[by-country] .autocomplete")[0].blur(),scope.currentCountry=country,scope.getAllByCountry()}})}}}}),app.controller("CarouselPlaylistsController",function($rootScope,$scope){$scope.fallbackImg=$rootScope.fallbackImg,$scope.$watch("focusedElem",function(newElem,oldElem){if(newElem!==oldElem&&void 0!==oldElem){var playlistId=newElem.getAttribute("data-playlist-id");$scope.onSlide({playlistId:playlistId})}})}),app.directive("carouselPlaylists",function(){return{scope:{playlists:"=",initialSlide:"=?",onSlide:"&"},controller:"CarouselPlaylistsController",templateUrl:"app/_directives/carousel-playlists/carousel-playlists.partial.html",link:function(scope,element,attrs){setTimeout(function(){M.Carousel.init($$(".carousel"),{dist:-10,shift:10,padding:5,indicators:!0,onCycleTo:function(elem){scope.$apply(function(){scope.focusedElem=elem})}})[0].set(scope.initialSlide)},100)}}}),app.controller("MaterializeFabController",function($scope,userService){$scope.user=userService.user,$scope.onPlaylistSelect=function(playlistId){$scope.add({playlistId:playlistId})}}),app.directive("materializeVideoFab",function(){return{scope:{index:"=",play:"&",add:"&"},controller:"MaterializeFabController",templateUrl:"app/_directives/fab/fab.partial.html",link:function(scope,element,attrs){setTimeout(function(){M.FloatingActionButton.init($$(".video-fab"),{direction:"bottom",hoverEnabled:!1})},100)}}}),app.controller("GridAlbumsController",function($rootScope,$scope){$scope.cutStr=function(text,letters){return text.length>letters?text.substr(0,letters)+"...":text},$scope.saveOnPlaylist=function(playlistId,videoData){$rootScope.$broadcast("userSaveTrack",{playlistId:playlistId,videoData:videoData})},$scope.ytVideo={open:function(videoData){$rootScope.$broadcast("ytPlayVideo",videoData)}},$scope.searchFor=function(type,value){var encodedValue=encodeURIComponent(value);switch(type){case"track":return $rootScope.baseUrl+"#!/tracks?search="+encodedValue;case"artist":return $rootScope.baseUrl+"#!/artists?search="+encodedValue;case"album":return $rootScope.baseUrl+"#!/albums?search="+encodedValue;default:throw'Invalid video type "'+type+'"'}}}),app.directive("gridAlbums",function(){return{scope:{series:"="},controller:"GridAlbumsController",templateUrl:"app/_directives/gridalbums/gridalbums.partial.html"}}),app.controller("GridArtistsController",function($rootScope,$scope){$scope.cutStr=function(text,letters){return text.length>letters?text.substr(0,letters)+"...":text},$scope.saveOnPlaylist=function(playlistId,videoData){$rootScope.$broadcast("userSaveTrack",{playlistId:playlistId,videoData:videoData})},$scope.ytVideo={open:function(videoData){$rootScope.$broadcast("ytPlayVideo",videoData)}},$scope.searchFor=function(type,value){var encodedValue=encodeURIComponent(value);switch(type){case"track":return $rootScope.baseUrl+"#!/tracks?search="+encodedValue;case"artist":return $rootScope.baseUrl+"#!/artists?search="+encodedValue;case"album":return $rootScope.baseUrl+"#!/albums?search="+encodedValue;default:throw'Invalid video type "'+type+'"'}}}),app.directive("gridArtists",function(){return{scope:{series:"="},controller:"GridArtistsController",templateUrl:"app/_directives/gridartists/gridartists.partial.html"}}),app.controller("GridTracksController",function($rootScope,$scope){$scope.cutStr=function(text,letters){return text.length>letters?text.substr(0,letters)+"...":text},$scope.saveOnPlaylist=function(playlistId,videoData){$rootScope.$broadcast("userSaveTrack",{playlistId:playlistId,videoData:videoData})},$scope.ytVideo={open:function(videoData){$rootScope.$broadcast("ytPlayVideo",videoData)}},$scope.searchFor=function(type,value){var encodedValue=encodeURIComponent(value);switch(type){case"track":return $rootScope.baseUrl+"#!/tracks?search="+encodedValue;case"artist":return $rootScope.baseUrl+"#!/artists?search="+encodedValue;case"album":return $rootScope.baseUrl+"#!/albums?search="+encodedValue;default:throw'Invalid video type "'+type+'"'}}}),app.directive("gridTracks",function(){return{scope:{series:"="},controller:"GridTracksController",templateUrl:"app/_directives/gridtracks/gridtracks.partial.html"}}),app.controller("LoginModalController",function($scope,$route){$scope.actions={},$scope.formData={signIn:{},signUp:{}},$scope.actions.signIn=function(){var data=$scope.formData.signIn;$scope.signIn({data:{username:data.username,password:data.password}}).then(function(response){void 0!==response.data.UserID?(M.toast({html:"Logged in",displayLength:"2000"}),$scope.instances[0].close()):(M.toast({html:"Error on login",classes:"red darken-4",displayLength:"2000"}),console.log(response))},function(errResponse){M.toast({html:"Error on login",classes:"red darken-4",displayLength:"2000"}),console.log(errResponse)})},$scope.actions.signUp=function(){var data=$scope.formData.signUp;/\s/.test(data.username)?M.toast({html:"Error on user creation",classes:"red darken-4",displayLength:"2000"}):$scope.signUp({data:{username:data.username,password:data.password,email:data.email}}).then(function(response){void 0!==response.data.UserID?(M.toast({html:"User created",displayLength:"2000"}),$scope.instances[0].close()):(M.toast({html:"Error on user creation",classes:"red darken-4",displayLength:"2000"}),console.log(response))},function(errResponse){M.toast({html:"Error on user creation",classes:"red darken-4",displayLength:"2000"}),console.log(errResponse)})}}),app.directive("loginModal",function(){return{scope:{signIn:"&",signUp:"&"},controller:"LoginModalController",templateUrl:"app/_directives/login/login.partial.html",link:function(scope,element,attr){scope.instances=M.Modal.init($$("#login-modal"),{})}}}),app.controller("PaginationController",function($scope){$scope.currentPage=1,$scope.lastPage=1,$scope.offsetPage=0,$scope.nextPage=function(){void 0!==$scope.onClick&&$scope.onClick(),$scope.lastPage=$scope.currentPage,$scope.currentPage+1==$scope.offsetPage+$scope.maxPage&&$scope.offsetPage++,$scope.currentPage+=1},$scope.prevPage=function(){if(void 0!==$scope.onClick&&$scope.onClick(),$scope.lastPage=$scope.currentPage,$scope.currentPage-1<=0)return!1;$scope.currentPage-1==$scope.offsetPage+1&&0<$scope.currentPage-2&&$scope.offsetPage--,$scope.currentPage-=1},$scope.goToPage=function(page){void 0!==$scope.onClick&&$scope.onClick(),$scope.lastPage=$scope.currentPage,page==$scope.offsetPage+$scope.maxPage?$scope.offsetPage++:page==$scope.offsetPage+1&&page-1!=0&&$scope.offsetPage--,$scope.currentPage=page},$scope.getNumber=function(num){return new Array(num)},$scope.$watch("currentPage",function(newVal,oldVal){$scope.runOnInit?$scope.pageChangeFunc({page:newVal}):newVal!==oldVal&&$scope.pageChangeFunc({page:newVal})})}),app.directive("materializePag",function(){return{scope:{runOnInit:"=",maxPage:"=",pageChangeFunc:"&",onClick:"&?"},controller:"PaginationController",templateUrl:"app/_directives/pagination/pagination.partial.html"}}),app.controller("PlaylistSelectionController",function($scope,userService){function addPlaylist(playlistId){$scope.onSelect({playlistId:playlistId}),$scope.instances[0].close(),$scope.newPlaylist=""}$scope.onModalOpen=function(){$scope.$apply(function(){$scope.playlists=userService.savedPlaylists.getAllPlaylists()})},$scope.selectPlaylist=function(playlistId){addPlaylist(playlistId)},$scope.createPlaylist=function(playlistName){userService.savedPlaylists.newPlaylist(playlistName).then(function(response){void 0!==response.data.PlaylistID?(addPlaylist(response.data.PlaylistID),M.toast({html:"Playlist created",displayLength:"2000"})):(M.toast({html:"Error on playlist creation",classes:"red darken-4",displayLength:"2000"}),console.log(response))},function(errResponse){console.log(errResponse)})}}),app.directive("playlistSelection",function(){return{scope:{index:"=",onSelect:"&"},controller:"PlaylistSelectionController",templateUrl:"app/_directives/playlist-selection/playlist-selection.partial.html",link:function(scope,element,attr){setTimeout(function(){scope.instances=M.Modal.init($$("#playlist-selection-"+scope.index),{onOpenStart:scope.onModalOpen})},100)}}}),app.controller("SearchController",function($scope,$location,$q,tracksService,artistsService,albumsService){$scope.searchAvailable=!0,$scope.onSubmit=function(key){$scope.onSearch({searchKey:key})?($scope.searchAvailable=!1,$$("[search-wide] input")[0].blur()):M.toast({html:"Invalid search",classes:"red darken-4",displayLength:"2000"})},$scope.close=function(){$location.search("search",null),$scope.searchAvailable=!0,angular.element($$(".search-wide input")).val(""),$scope.onClose()},$scope.$watch("key",function(newVal,oldVal){if(newVal!==oldVal&&""!=newVal){$scope.searchAvailable=!0,void 0!==$scope.autocompleteAbort&&$scope.autocompleteAbort.resolve(),$scope.autocompleteAbort=$q.defer();var instance=M.Autocomplete.getInstance($scope.instances.autocomplete[0].el),limit=instance.options.limit;switch($scope.searchType){case"Tracks":tracksService.getTrackSearch(newVal,1,limit,$scope.autocompleteAbort.promise).then(function(response){if(void 0===response.data.error&&void 0!==response.data.results){var tracks=response.data.results.trackmatches.track,autoTracks={};for(var i in tracks){autoTracks[tracks[i].name]=null}instance.updateData(autoTracks),instance.open()}else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)});break;case"Artists":artistsService.getArtistSearch(newVal,1,limit,$scope.autocompleteAbort.promise).then(function(response){if(void 0===response.data.error&&void 0!==response.data.results){var artists=response.data.results.artistmatches.artist,autoArtists={};for(var i in artists){autoArtists[artists[i].name]=null}instance.updateData(autoArtists),instance.open()}else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)});break;case"Albums":albumsService.getAlbumSearch(newVal,1,limit,$scope.autocompleteAbort.promise).then(function(response){if(void 0===response.data.error&&void 0!==response.data.results){var albums=response.data.results.albummatches.album,autoAlbums={};for(var i in albums){autoAlbums[albums[i].name]=null}instance.updateData(autoAlbums),instance.open()}else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)});break;default:throw"Invalid search type"}}}),function(){if(void 0!==$location.search().search){var searchParam=$location.search().search;$scope.key=searchParam,$scope.onSubmit(searchParam)}}()}),app.directive("searchWide",function(){return{scope:{searchType:"=",key:"=",onSearch:"&",onClose:"&"},controller:"SearchController",templateUrl:"app/_directives/search/search.partial.html",link:function(scope,element,attr){a=scope.instances={autocomplete:M.Autocomplete.init($$(".autocomplete"),{limit:3,onAutocomplete:function(key){scope.onSubmit(key)}})}}}}),app.controller("YTPlayerController",function($rootScope,$scope,$sce,youTubeService){function cleanPlayer(){$scope.isVisible=!0,delete $scope.YTplayer,delete $scope.videoUrl,$scope.playerVars={autoplay:1,playsinline:1,rel:0}}$scope.isOpen=!1,$scope.isExpanded=!1,$scope.isVisible=!0,$scope.close=function(){$scope.isOpen=!1,cleanPlayer()},$scope.expand=function(){$scope.isExpanded=!$scope.isExpanded},$scope.visibility=function(){$scope.isVisible=!$scope.isVisible},cleanPlayer(),$scope.$on("youtube.player.ready",function($event,player){$scope.YTplayer=player}),$scope.$on("ytPlayVideo",function(event,videoData){switch(videoData.type){case"id":$scope.isOpen=!0,id=videoData.id,cleanPlayer(),$scope.videoUrl=id;break;case"track":$scope.isOpen=!0,artist=videoData.artist,track=videoData.track,youTubeService.getMusicVideo(artist,track).then(function(response){var video=response.data.items[0],id=video.id.videoId;cleanPlayer(),$scope.videoUrl=id},function(errResponse){console.log(errResponse)});break;case"album":$scope.isOpen=!0,function(artist,album){youTubeService.getAlbumPlaylist(artist,album).then(function(response){var playlist=response.data.items[0],id=playlist.id.playlistId;cleanPlayer(),$scope.playerVars.list=id},function(errResponse){console.log(errResponse)})}(videoData.artist,videoData.album);break;case"artist":$scope.isOpen=!0,function(artist){youTubeService.getArtistPlaylist(artist).then(function(response){var playlist=response.data.items[0],id=playlist.id.playlistId;cleanPlayer(),$scope.playerVars.list=id},function(errResponse){console.log(errResponse)})}(videoData.artist);break;default:throw'Invalid video type "'+videoData.type+'"'}var artist,track,id}),$scope.$on("ytPlayCustomPlaylist",function(event,playlist){$scope.isOpen=!0,cleanPlayer(),$scope.playerVars.playlist=playlist.map(function(elem){return elem.videoId}).join(",")})}),app.directive("ytPlayer",function(){return{controller:"YTPlayerController",templateUrl:"app/_directives/ytplayer/ytplayer.partial.html"}}),app.service("albumsService",function($http,apiKeysService){this.getAlbumInfo=function(artist,album,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key="+apiKeysService.getLastFmKey()+"&format=json&album="+encodeURIComponent(album)+"&artist="+encodeURIComponent(artist),{timeout:timeout})},this.getAlbumSearch=function(album,page,limit,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=album.search&api_key="+apiKeysService.getLastFmKey()+"&format=json&album="+encodeURIComponent(album)+"&limit="+encodeURIComponent(limit)+"&page="+encodeURIComponent(page),{timeout:timeout})}}),app.service("apiKeysService",function(){var lastFmApiKeys=["a431af7680e5bd6e612b0eefd5448a06","61b502648995e8805c36d0996d41b879","e443ac025fea43b249a36e29b0f12a91","dbe84a52343b027da04e9fadde99a0e8","5bca7eafa851448173501cf75ab15232"],youTubeApiKeys=["AIzaSyA2-xI7nmoHKJKw1tFIWfONlGwqPx2B0MQ"];this.getLastFmKey=function(){return lastFmApiKeys[Math.floor(Math.random()*lastFmApiKeys.length)]},this.getYouTubeKey=function(){return youTubeApiKeys[0]}}),app.service("artistsService",function($http,apiKeysService){this.getArtistInfo=function(artist,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=artist.getinfo&api_key="+apiKeysService.getLastFmKey()+"&format=json&artist="+encodeURIComponent(artist),{timeout:timeout})},this.getArtistSearch=function(artist,page,limit,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=artist.search&api_key="+apiKeysService.getLastFmKey()+"&format=json&artist="+encodeURIComponent(artist)+"&limit="+encodeURIComponent(limit)+"&page="+encodeURIComponent(page),{timeout:timeout})},this.getTopAlbums=function(artist,page,limit,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=artist.gettopalbums&api_key="+apiKeysService.getLastFmKey()+"&format=json&artist="+encodeURIComponent(artist)+"&limit="+encodeURIComponent(limit)+"&page="+encodeURIComponent(page),{timeout:timeout})}}),app.service("geoService",function($http,apiKeysService){this.getTracksByCountry=function(country,page,limit,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=geo.gettoptracks&api_key="+apiKeysService.getLastFmKey()+"&format=json&country="+encodeURIComponent(country)+"&limit="+encodeURIComponent(limit)+"&page="+encodeURIComponent(page),{timeout:timeout})},this.getArtistsByCountry=function(country,page,limit,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=geo.gettopartists&api_key="+apiKeysService.getLastFmKey()+"&format=json&country="+encodeURIComponent(country)+"&limit="+encodeURIComponent(limit)+"&page="+encodeURIComponent(page),{timeout:timeout})},this.getUserLocation=function(){return $http.get("//ipinfo.io")},this.countries={Afghanistan:"Afghanistan","Åland Islands":"Åland Islands",Albania:"Albania",Algeria:"Algeria","American Samoa":"American Samoa",Andorra:"Andorra",Angola:"Angola",Anguilla:"Anguilla",Antarctica:"Antarctica","Antigua and Barbuda":"Antigua and Barbuda",Argentina:"Argentina",Armenia:"Armenia",Aruba:"Aruba",Australia:"Australia",Austria:"Austria",Azerbaijan:"Azerbaijan",Bahamas:"Bahamas",Bahrain:"Bahrain",Bangladesh:"Bangladesh",Barbados:"Barbados",Belarus:"Belarus",Belgium:"Belgium",Belize:"Belize",Benin:"Benin",Bermuda:"Bermuda",Bhutan:"Bhutan","Bolivia (Plurinational State of)":"Bolivia","Bonaire, Sint Eustatius and Saba":null,"Bosnia and Herzegovina":"Bosnia and Herzegovina",Botswana:"Botswana","Bouvet Island":"Bouvet Island",Brazil:"Brazil","British Indian Ocean Territory":"British Indian Ocean Territory","Brunei Darussalam":"Brunei Darussalam",Bulgaria:"Bulgaria","Burkina Faso":"Burkina Faso",Burundi:"Burundi","Cape Verde":"Cape Verde",Cambodia:"Cambodia",Cameroon:"Cameroon",Canada:"Canada","Cayman Islands":"Cayman Islands","Central African Republic":"Central African Republic",Chad:"Chad",Chile:"Chile",China:"China","Christmas Island":"Christmas Island","Cocos (Keeling) Islands":"Cocos (Keeling) Islands",Colombia:"Colombia",Comoros:"Comoros",Congo:"Congo","Congo (Democratic Republic of the)":"Congo","Cook Islands":"Cook Islands","Costa Rica":"Costa Rica","Côte D'ivoire":"Cote D'ivoire",Croatia:"Croatia",Cuba:"Cuba","Curaçao":"Curaçao",Cyprus:"Cyprus","Czech Republic":"Czech Republic",Denmark:"Denmark",Djibouti:"Djibouti",Dominica:"Dominica","Dominican Republic":"Dominican Republic",Ecuador:"Ecuador",Egypt:"Egypt","El Salvador":"El Salvador","Equatorial Guinea":"Equatorial Guinea",Eritrea:"Eritrea",Estonia:"Estonia",Ethiopia:"Ethiopia","Falkland Islands (Malvinas)":"Falkland Islands (Malvinas)","Faroe Islands":"Faroe Islands",Fiji:"Fiji",Finland:"Finland",France:"France","French Guiana":"French Guiana","French Polynesia":"French Polynesia","French Southern Territories":"French Southern Territories",Gabon:"Gabon",Gambia:"Gambia",Georgia:"Georgia",Germany:"Germany",Ghana:"Ghana",Gibraltar:"Gibraltar",Greece:"Greece",Greenland:"Greenland",Grenada:"Grenada",Guadeloupe:"Guadeloupe",Guam:"Guam",Guatemala:"Guatemala",Guernsey:"Guernsey",Guinea:"Guinea","Guinea-Bissau":"Guinea-Bissau",Guyana:"Guyana",Haiti:"Haiti","Heard Island and McDonald Islands":"Heard Island and McDonald Islands","Holy See (Vatican City State)":"Holy See (Vatican City State)",Honduras:"Honduras","Hong Kong":"Hong Kong",Hungary:"Hungary",Iceland:"Iceland",India:"India",Indonesia:"Indonesia","Iran, Islamic Republic of":"Iran, Islamic Republic of",Iraq:"Iraq",Ireland:"Ireland","Isle of Man":"Isle of Man",Israel:"Israel",Italy:"Italy",Jamaica:"Jamaica",Japan:"Japan",Jersey:"Jersey",Jordan:"Jordan",Kazakhstan:"Kazakhstan",Kenya:"Kenya",Kiribati:"Kiribati","Korea, Democratic People's Republic of":"Korea, Democratic People's Republic of","Korea, Republic of":"Korea, Republic of",Kuwait:"Kuwait",Kyrgyzstan:"Kyrgyzstan","Lao People's Democratic Republic":"Lao People's Democratic Republic",Latvia:"Latvia",Lebanon:"Lebanon",Lesotho:"Lesotho",Liberia:"Liberia","Libyan Arab Jamahiriya":"Libyan Arab Jamahiriya",Liechtenstein:"Liechtenstein",Lithuania:"Lithuania",Luxembourg:"Luxembourg",Macao:"Macao","Macedonia (the former Yugoslav Republic of)":"Macedonia",Madagascar:"Madagascar",Malawi:"Malawi",Malaysia:"Malaysia",Maldives:"Maldives",Mali:"Mali",Malta:"Malta","Marshall Islands":"Marshall Islands",Martinique:"Martinique",Mauritania:"Mauritania",Mauritius:"Mauritius",Mayotte:"Mayotte",Mexico:"Mexico","Micronesia, Federated States of":"Micronesia, Federated States of","Moldova (Republic of)":"Moldova",Monaco:"Monaco",Mongolia:"Mongolia",Montenegro:"Montenegro",Montserrat:"Montserrat",Morocco:"Morocco",Mozambique:"Mozambique",Myanmar:"Myanmar",Namibia:"Namibia",Nauru:"Nauru",Nepal:"Nepal",Netherlands:"Netherlands","New Caledonia":"New Caledonia","New Zealand":"New Zealand",Nicaragua:"Nicaragua",Niger:"Niger",Nigeria:"Nigeria",Niue:"Niue","Norfolk Island":"Norfolk Island","Northern Mariana Islands":"Northern Mariana Islands",Norway:"Norway",Oman:"Oman",Pakistan:"Pakistan",Palau:"Palau","Palestine, State of":null,Panama:"Panama","Papua New Guinea":"Papua New Guinea",Paraguay:"Paraguay",Peru:"Peru",Philippines:"Philippines",Pitcairn:"Pitcairn",Poland:"Poland",Portugal:"Portugal","Puerto Rico":"Puerto Rico",Qatar:"Qatar","Réunion":"Reunion",Romania:"Romania","Russian Federation":"Russian Federation",Rwanda:"Rwanda","Saint Barthélemy":"Saint Barthélemy","Saint Helena, Ascension and Tristan da Cunha":"Saint Helena","Saint Kitts and Nevis":"Saint Kitts and Nevis","Saint Lucia":"Saint Lucia","Saint Martin (French part)":"Saint Martin (French part)","Saint Pierre and Miquelon":"Saint Pierre and Miquelon","Saint Vincent and the Grenadines":"Saint Vincent and the Grenadines",Samoa:"Samoa","San Marino":"San Marino","Sao Tome and Principe":"Sao Tome and Principe","Saudi Arabia":"Saudi Arabia",Senegal:"Senegal",Serbia:"Serbia",Seychelles:"Seychelles","Sierra Leone":"Sierra Leone",Singapore:"Singapore","Sint Maarten (Dutch part)":"Sint Maarten",Slovakia:"Slovakia",Slovenia:"Slovenia","Solomon Islands":"Solomon Islands",Somalia:"Somalia","South Africa":"South Africa","South Georgia and the South Sandwich Islands":"South Georgia and the South Sandwich Islands","South Sudan":"South Sudan",Spain:"Spain","Sri Lanka":"Sri Lanka",Sudan:"Sudan",Suriname:"Suriname","Svalbard and Jan Mayen":"Svalbard and Jan Mayen",Swaziland:"Swaziland",Sweden:"Sweden",Switzerland:"Switzerland","Syrian Arab Republic":"Syrian Arab Republic",Taiwan:"Taiwan",Tajikistan:"Tajikistan","Tanzania, United Republic of":"Tanzania, United Republic of",Thailand:"Thailand","Timor-Leste":"Timor-Leste",Togo:"Togo",Tokelau:"Tokelau",Tonga:"Tonga","Trinidad and Tobago":"Trinidad and Tobago",Tunisia:"Tunisia",Turkey:"Turkey",Turkmenistan:"Turkmenistan","Turks and Caicos Islands":"Turks and Caicos Islands",Tuvalu:"Tuvalu",Uganda:"Uganda",Ukraine:"Ukraine","United Arab Emirates":"United Arab Emirates","United Kingdom":"United Kingdom","United States of America":"United States","United States Minor Outlying Islands":"United States Minor Outlying Islands",Uruguay:"Uruguay",Uzbekistan:"Uzbekistan",Vanuatu:"Vanuatu","Venezuela (Bolivarian Republic of)":"Venezuela","Viet Nam":"Viet Nam","Virgin Islands, British":"Virgin Islands, British","Virgin Islands, U.S.":"Virgin Islands, U.S.","Wallis and Futuna":"Wallis and Futuna","Western Sahara":"Western Sahara",Yemen:"Yemen",Zambia:"Zambia",Zimbabwe:"Zimbabwe"},this.alfa2ToName={AF:"Afghanistan",AX:"Åland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua and Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia (Plurinational State of)",BQ:"Bonaire, Sint Eustatius and Saba",BA:"Bosnia and Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cape Verde",CM:"Cambodia",CA:"Cameroon",CV:"Canada",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo (Democratic Republic of the)",CK:"Cook Islands",CR:"Costa Rica",CI:"Côte D'ivoire",HR:"Croatia",CU:"Cuba",CW:"Curaçao",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island and McDonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic of",IQ:"Iraq",IE:"Ireland",IM:"Isle of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KP:"Korea, Democratic People's Republic of",KR:"Korea, Republic of",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia (the former Yugoslav Republic of)",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States of",MD:"Moldova (Republic of)",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestine, State of",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Réunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",BL:"Saint Barthélemy",SH:"Saint Helena, Ascension and Tristan da Cunha",KN:"Saint Kitts and Nevis",LC:"Saint Lucia",MF:"Saint Martin (French part)",PM:"Saint Pierre and Miquelon",VC:"Saint Vincent and the Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome and Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SX:"Sint Maarten (Dutch part)",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia and the South Sandwich Islands",SS:"South Sudan",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard and Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania, United Republic of",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks and Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States of America",UM:"United States Minor Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela (Bolivarian Republic of)",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis and Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"}}),app.service("topsService",function($http,apiKeysService){this.getTopTracks=function(page,limit,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key="+apiKeysService.getLastFmKey()+"&format=json&limit="+encodeURIComponent(limit)+"&page="+encodeURIComponent(page),{timeout:timeout})},this.getTopArtists=function(page,limit,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=chart.gettopartists&api_key="+apiKeysService.getLastFmKey()+"&format=json&limit="+encodeURIComponent(limit)+"&page="+encodeURIComponent(page),{timeout:timeout})},this.getTopTags=function(page,limit,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=chart.gettoptags&api_key="+apiKeysService.getLastFmKey()+"&format=json&limit="+5*encodeURIComponent(page))},this.getTopArtistsByTag=function(tag,page,limit,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=tag.gettopartists&api_key="+apiKeysService.getLastFmKey()+"&format=json&limit="+encodeURIComponent(limit)+"&tag="+encodeURIComponent(tag)+"&page="+encodeURIComponent(page),{timeout:timeout})}}),app.service("tracksService",function($http,apiKeysService){this.getTrackInfo=function(artist,track,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key="+apiKeysService.getLastFmKey()+"&format=json&artist="+encodeURIComponent(artist)+"&track="+encodeURIComponent(track),{timeout:timeout})},this.getTrackSearch=function(track,page,limit,timeout){return void 0===timeout&&(timeout=null),$http.get("//ws.audioscrobbler.com/2.0/?method=track.search&api_key="+apiKeysService.getLastFmKey()+"&format=json&track="+encodeURIComponent(track)+"&limit="+encodeURIComponent(limit)+"&page="+encodeURIComponent(page),{timeout:timeout})}}),app.service("userService",function($rootScope,$http){var self=this;this.user={isLogged:!1,avatar:null,name:null,email:null},this.userSecure={username:null,userId:null},this.signUp=function(data){return void 0!==data?$http.post($rootScope.baseUrl+"src/php/user.signup.php",data).then(function(response){return void 0!==response.data.UserID&&$http.post($rootScope.baseUrl+"src/php/session.create.php",data),response},function(errResponse){return console.log(errResponse),errResponse}):new Promise(function(resolve,reject){resolve({data:"0"})})},this.signIn=function(data){return void 0!==data?$http.post($rootScope.baseUrl+"src/php/user.signin.php",data).then(function(response){return void 0!==response.data.UserID&&$http.post($rootScope.baseUrl+"src/php/session.create.php",data),response},function(errResponse){return console.log(errResponse),errResponse}):new Promise(function(resolve,reject){resolve({data:"0"})})},this.logOut=function(){return $http.post($rootScope.baseUrl+"src/php/session.delete.php").then(function(response){return response},function(errResponse){return errResponse})},this.sessionLogin=function(){return $http.post($rootScope.baseUrl+"src/php/session.login.php")},this.changeAvatar=function(data){return $http.post($rootScope.baseUrl+"src/php/settings.avatar.php",data)},this.changeName=function(data){return $http.post($rootScope.baseUrl+"src/php/settings.name.php",data)},this.changePassword=function(data){return $http.post($rootScope.baseUrl+"src/php/settings.password.php",data)},this.deleteAccount=function(data){return $http.post($rootScope.baseUrl+"src/php/user.delete.php",data)},this.savedPlaylistsArray=[],this.savedPlaylists={loadPlaylists:function(){return self.user.isLogged?$http.post($rootScope.baseUrl+"src/php/track.getall.php",{user:self.userSecure.userId}).then(function(response){if(void 0!==response.data&&"object"==typeof response.data){var rawPlaylists=response.data,playlist=[];for(var i in rawPlaylists)for(var j in playlist[i]={playlistId:rawPlaylists[i].PlaylistID,name:rawPlaylists[i].Name,list:[],date:new Date(rawPlaylists[i].CreationDate)},rawPlaylists[i].list){var list=rawPlaylists[i].list[j];playlist[i].list.push({trackId:list.TrackID,videoId:list.Video,title:list.Title,img:list.Image,date:new Date(list.AdditionDate),position:list.Position}),playlist[i].list.sort(function(a,b){return parseInt(a.position)-parseInt(b.position)})}self.savedPlaylistsArray=playlist}else console.log(response);return response},function(errResponse){return console.log(errResponse),response}):new Promise(function(resolve,reject){resolve({data:null})})},newPlaylist:function(playlistName){return self.user.isLogged&&!this.playlistExistsName(playlistName)?$http.post($rootScope.baseUrl+"src/php/playlist.create.php",{name:playlistName,user:self.userSecure.userId}).then(function(response){return void 0!==response.data.PlaylistID?self.savedPlaylistsArray.push({playlistId:response.data.PlaylistID,name:response.data.Name,date:new Date(response.data.CreationDate),list:[]}):console.log(response),response},function(errResponse){return console.log(errResponse),response}):new Promise(function(resolve,reject){resolve({data:null})})},deletePlaylist:function(playlistId){var $this=this;return self.user.isLogged&&this.playlistExistsId(playlistId)?$http.post($rootScope.baseUrl+"src/php/playlist.delete.php",{playlist:playlistId,user:self.userSecure.userId}).then(function(response){return void 0!==response.data.PlaylistID?self.savedPlaylistsArray.splice($this.getIndexId(playlistId),1):console.log(response),response},function(errResponse){return console.log(errResponse),response}):new Promise(function(resolve,reject){resolve({data:null})})},renamePlaylist:function(playlistId,newName){var $this=this;return self.user.isLogged&&this.playlistExistsId(playlistId)&&!this.playlistExistsName(newName)?$http.post($rootScope.baseUrl+"src/php/playlist.rename.php",{playlist:playlistId,newName:newName,user:self.userSecure.userId}).then(function(response){return void 0!==response.data.PlaylistID?self.savedPlaylistsArray[$this.getIndexId(playlistId)].name=newName:console.log(response),response},function(errResponse){return console.log(errResponse),response}):new Promise(function(resolve,reject){resolve({data:null})})},getPlaylist:function(playlistId){return self.user.isLogged&&this.playlistExistsId(playlistId)?self.savedPlaylistsArray[this.getIndexId(playlistId)]:{}},getAllPlaylists:function(){return self.user.isLogged&&0<self.savedPlaylistsArray.length?self.savedPlaylistsArray:[]},addTrack:function(playlistId,trackData){var $this=this;return self.user.isLogged&&this.playlistExistsId(playlistId)&&void 0!==trackData?$http.post($rootScope.baseUrl+"src/php/track.add.php",{title:trackData.title,video:trackData.videoId,img:trackData.img,playlist:playlistId,user:self.userSecure.userId}).then(function(response){return void 0!==response.data.PlaylistID?self.savedPlaylistsArray[$this.getIndexId(playlistId)].list.push({trackId:response.data.TrackID,title:response.data.Title,videoId:response.data.Video,img:response.data.Image,date:new Date(response.data.AdditionDate),position:response.data.Position}):console.log(response),response},function(errResponse){return console.log(errResponse),response}):new Promise(function(resolve,reject){resolve({data:null})})},removeTrack:function(playlistId,trackId){var $this=this;return self.user.isLogged&&this.playlistExistsId(playlistId)&&0<trackId?$http.post($rootScope.baseUrl+"src/php/track.remove.php",{track:trackId,playlist:playlistId,user:self.userSecure.userId}).then(function(response){if(void 0!==response.data.PlaylistID){var plIndex=$this.getIndexId(playlistId),tkIndex=self.savedPlaylistsArray[plIndex].list.findIndex(function(e){return e.trackId==trackId});self.savedPlaylistsArray[plIndex].list.splice(tkIndex,1)}else console.log(response);return response},function(errResponse){return console.log(errResponse),response}):new Promise(function(resolve,reject){resolve({data:null})})},changeTrackPosition:function(playlistId,trackId,direction){var $this=this;return self.user.isLogged&&this.playlistExistsId(playlistId)&&0<trackId&&("up"==direction||"down"==direction)?$http.post($rootScope.baseUrl+"src/php/track.position.php",{track:trackId,playlist:playlistId,direction:direction,user:self.userSecure.userId}).then(function(response){if(void 0!==response.data.Position){var plIndex=$this.getIndexId(playlistId),tkIndex=self.savedPlaylistsArray[plIndex].list.findIndex(function(e){return e.trackId==response.data.TrackID});if("up"==direction){var nextIndex=self.savedPlaylistsArray[plIndex].list.findIndex(function(e){return e.position==parseInt(response.data.Position)-1});self.savedPlaylistsArray[plIndex].list[nextIndex].position=response.data.Position,self.savedPlaylistsArray[plIndex].list[tkIndex].position=(parseInt(response.data.Position)-1).toString()}else{var prevIndex=self.savedPlaylistsArray[plIndex].list.findIndex(function(e){return e.position==parseInt(response.data.Position)+1});self.savedPlaylistsArray[plIndex].list[prevIndex].position=response.data.Position,self.savedPlaylistsArray[plIndex].list[tkIndex].position=(parseInt(response.data.Position)+1).toString()}self.savedPlaylistsArray[plIndex].list.sort(function(a,b){return parseInt(a.position)-parseInt(b.position)})}else console.log(response);return response},function(errResponse){return console.log(errResponse),response}):new Promise(function(resolve,reject){resolve({data:null})})},appendPlaylist:function(playlistId,sourcePlaylist){var $this=this;if(self.user.isLogged&&this.playlistExistsId(playlistId)&&void 0!==sourcePlaylist&&0<sourcePlaylist.length){var waitForLast={};waitForLast.promise=new Promise(function(resolve,reject){waitForLast.resolve=resolve,waitForLast.reject=reject});var i=-1;return function trackRequest(id,source){i++;i<source.length-1?$this.addTrack(id,source[i]).then(function(response){trackRequest(id,source)},function(errResponse){console.log(errResponse),trackRequest(id,source)}):i==source.length-1&&$this.addTrack(id,source[i]).then(function(response){waitForLast.resolve(response)},function(errResponse){console.log(errResponse),waitForLast.reject(errResponse)})}(playlistId,sourcePlaylist),waitForLast.promise}return new Promise(function(resolve,reject){resolve({data:null})})},getIndexName:function(name){var index=self.savedPlaylistsArray.findIndex(function(e){return e.name==name});return 0<=index&&index},getIndexId:function(playlistId){var index=self.savedPlaylistsArray.findIndex(function(e){return e.playlistId==playlistId});return 0<=index&&index},playlistExistsName:function(name){return 0<self.savedPlaylistsArray.filter(function(e){return e.name==name}).length},playlistExistsId:function(playlistId){return 0<self.savedPlaylistsArray.filter(function(e){return e.playlistId==playlistId}).length}}}),app.service("youTubeService",function($http,apiKeysService){this.getMusicVideo=function(artist,track){return $http.get("https://content.googleapis.com/youtube/v3/search?key="+apiKeysService.getYouTubeKey()+"&part=id%2Csnippet&videoEmbeddable =true&maxResults=1&type=video&q="+encodeURIComponent(artist+" - "+track))},this.getAlbumPlaylist=function(artist,album){return $http.get("https://content.googleapis.com/youtube/v3/search?key="+apiKeysService.getYouTubeKey()+"&part=id%2Csnippet&videoEmbeddable =true&maxResults=1&type=playlist&q="+encodeURIComponent(artist+" - "+album))},this.getArtistPlaylist=function(artist){return $http.get("https://content.googleapis.com/youtube/v3/search?key="+apiKeysService.getYouTubeKey()+"&part=id%2Csnippet&videoEmbeddable =true&maxResults=1&type=playlist&q="+encodeURIComponent(artist))},this.getPlaylistVideos=function(playlistId,pageToken){var pg=pageToken?"&pageToken="+pageToken:"";return $http.get("https://www.googleapis.com/youtube/v3/playlistItems?key="+apiKeysService.getYouTubeKey()+"&part=snippet,contentDetails&maxResults=50"+pg+"&playlistId="+playlistId,{cache:!0})}}),app.controller("HeaderController",function($rootScope,$scope,$location,topsService,userService){$scope.navItems={main:[{text:"Home",url:"/"},{text:"Tracks",url:"/tracks"},{text:"Artists",url:"/artists"},{text:"Albums",url:"/albums"}],user:[{text:"Playlists",url:"/user/playlists"},{text:"Settings",url:"/user"}]},$scope.isActive=function(url){return url==$location.path()};var dft_page=1,dft_limit=5;!function(){function getUniqueImg(dataArray,headerImgs){var img="";for(var i in dataArray){for(var j in img=dataArray[i].image.pop()["#text"],headerImgs)if(img==headerImgs[j]){img="";break}if(""!=img)break}return""==img&&(img=$rootScope.fallbackImg),img}$scope.headerImgs={},$scope.headerImgs.topTrack=$rootScope.fallbackImg,$scope.headerImgs.topArtist=$rootScope.fallbackImg,$scope.headerImgs.topTag=$rootScope.fallbackImg,topsService.getTopTracks(dft_page,dft_limit).then(function(response){void 0===response.data.error?void 0!==response.data.tracks&&void 0!==response.data.tracks.track[0].image&&""!=response.data.tracks.track[0].image[0]["#text"]&&($scope.headerImgs.topTrack=getUniqueImg(response.data.tracks.track,$scope.headerImgs)):console.log(response)},function(errResponse){$scope.headerImgs.topTrack=$rootScope.fallbackImg,console.log("Error while fetching tops (header) images: "+errResponse)}),topsService.getTopArtists(dft_page,dft_limit).then(function(response){void 0===response.data.error?void 0!==response.data.artists&&void 0!==response.data.artists.artist[0].image&&""!=response.data.artists.artist[0].image[0]["#text"]&&($scope.headerImgs.topArtist=getUniqueImg(response.data.artists.artist,$scope.headerImgs)):console.log(response)},function(errResponse){$scope.headerImgs.topArtist=$rootScope.fallbackImg,console.log("Error while fetching tops (header) images: "+errResponse)}),topsService.getTopTags(dft_page,dft_limit).then(function(response){var tag=response.data.tags.tag[0].name;topsService.getTopArtistsByTag(tag).then(function(response){void 0===response.data.error?void 0!==response.data.topartists&&void 0!==response.data.topartists.artist[0].image&&""!=response.data.topartists.artist[0].image[0]["#text"]&&($scope.headerImgs.topTag=getUniqueImg(response.data.topartists.artist,$scope.headerImgs)):console.log(response)},function(errResponse){$scope.headerImgs.topTag=$rootScope.fallbackImg,console.log("Error while fetching tops (header) images: "+errResponse)})})}()}),app.controller("UserController",function($rootScope,$scope,$timeout,$route,userService,youTubeService){function logUser(data){userService.user.isLogged=!0,userService.user.avatar=$rootScope.baseUrl+data.Avatar,userService.user.name=data.Name,userService.user.email=data.Email,userService.userSecure.username=data.Username,userService.userSecure.userId=data.UserID,$timeout(function(){$rootScope.materialize.all()},10),$route.reload()}$scope.user=userService.user,$scope.userMethods={},$scope.userMethods.signUp=function(data){return userService.signUp(data).then(function(response){return void 0!==response.data.UserID&&logUser(response.data),response},function(errResponse){return console.log(errResponse),errResponse})},$scope.userMethods.signIn=function(data){return userService.signIn(data).then(function(response){var signInResponse=response;return void 0!==response.data.UserID?(logUser(response.data),userService.savedPlaylists.loadPlaylists().then(function(response){return signInResponse},function(errResponse){return console.log(errResponse),errResponse})):response},function(errResponse){return console.log(errResponse),errResponse})},$scope.userMethods.logOut=function(){userService.logOut().then(function(response){userService.user.isLogged=!1,userService.user.avatar=null,userService.user.name=null,userService.user.email=null,userService.userSecure.username=null,userService.userSecure.userId=null,$timeout(function(){$rootScope.materialize.all()},10),M.toast({html:"Logged Out",displayLength:"2000"}),$route.reload()},function(errResponse){M.toast({html:"Error on logout",classes:"red darken-4",displayLength:"2000"}),console.log(errResponse)})},$scope.sessionLoginResponse=userService.sessionLogin().then(function(response){return void 0!==response.data.UserID?(logUser(response.data),userService.savedPlaylists.loadPlaylists()):response},function(errResponse){return console.log(errResponse),errResponse}),$scope.$on("userSaveTrack",function(event,data){switch(data.videoData.type){case"track":playlistId=data.playlistId,artist=data.videoData.artist,track=data.videoData.track,youTubeService.getMusicVideo(artist,track).then(function(response){if(void 0===response.data.error&&void 0===response.data.error){var video=response.data.items[0],videoId=video.id.videoId,title=video.snippet.title;userService.savedPlaylists.addTrack(playlistId,{videoId:videoId,title:title,img:video.snippet.thumbnails.medium.url}).then(function(response){void 0!==response.data.TrackID?M.toast({html:"Track added",displayLength:"2000"}):(M.toast({html:"Error on track addition",classes:"red darken-4",displayLength:"2000"}),console.log(response))},function(errResponse){M.toast({html:"Error on track addition",classes:"red darken-4",displayLength:"2000"}),console.log(errResponse)})}else console.log(response)},function(errResponse){console.log(errResponse)});break;case"album":!function(playlistId,artist,album){youTubeService.getAlbumPlaylist(artist,album).then(function(response){if(void 0===response.data.error&&void 0===response.data.error){var playlist=response.data.items[0],id=playlist.id.playlistId,videosData=[];!function getVideosIds(id,pageToken){youTubeService.getPlaylistVideos(id,pageToken).then(function(response){if(void 0===response.data.error&&void 0===response.data.error){var videos=response.data.items;for(var i in videos)videosData.push({videoId:videos[i].contentDetails.videoId,title:videos[i].snippet.title,img:videos[i].snippet.thumbnails.medium.url});if(void 0!==response.data.nextPageToken)getVideosIds(id,response.data.nextPageToken);else{window.onbeforeunload=function(){return"Adding track..."};var addingToast=M.toast({html:"Adding tracks...",displayLength:"999999",completeCallback:function(){window.onbeforeunload=function(){return null}}});userService.savedPlaylists.appendPlaylist(playlistId,videosData).then(function(response){addingToast.dismiss(),void 0!==response.data.TrackID?M.toast({html:"Tracks added",displayLength:"2000"}):(M.toast({html:"Error on tracks addition",classes:"red darken-4",displayLength:"2000"}),console.log(response))},function(errResponse){addingToast.dismiss(),M.toast({html:"Error on tracks addition",classes:"red darken-4",displayLength:"2000"}),console.log(errResponse)})}}else console.log(response)},function(errResponse){console.log(errResponse)})}(id,null)}else console.log(response)},function(errResponse){console.log(errResponse)})}(data.playlistId,data.videoData.artist,data.videoData.album);break;case"artist":!function(playlistId,artist){youTubeService.getArtistPlaylist(artist).then(function(response){if(void 0===response.data.error&&void 0===response.data.error){var playlist=response.data.items[0],id=playlist.id.playlistId,videosData=[];!function getVideosIds(id,pageToken){youTubeService.getPlaylistVideos(id,pageToken).then(function(response){if(void 0===response.data.error&&void 0===response.data.error){var videos=response.data.items;for(var i in videos)videosData.push({videoId:videos[i].contentDetails.videoId,title:videos[i].snippet.title,img:videos[i].snippet.thumbnails.medium.url});void 0!==response.data.nextPageToken?getVideosIds(id,response.data.nextPageToken):userService.savedPlaylists.appendPlaylist(playlistId,videosData).then(function(response){void 0!==response.data.TrackID?M.toast({html:"Tracks added",displayLength:"2000"}):(M.toast({html:"Error on tracks addition",classes:"red darken-4",displayLength:"2000"}),console.log(response))},function(errResponse){M.toast({html:"Error on tracks addition",classes:"red darken-4",displayLength:"2000"}),console.log(errResponse)})}else console.log(response)},function(errResponse){console.log(errResponse)})}(id,null)}else console.log(response)},function(errResponse){console.log(errResponse)})}(data.playlistId,data.videoData.artist);break;default:throw'Invalid video type "'+data.videoData.type+'"'}var playlistId,artist,track})}),app.controller("AlbumsController",function($rootScope,$scope,$location,$q,albumsService,topsService,artistsService){var dft_page=1,dft_limit=5;!function(page,limit){if(void 0===page)var page=dft_page;if(void 0===limit)var limit=dft_limit;topsService.getTopArtists(page,limit).then(function(response){if(void 0===response.data.error){$scope.albums=[];var topArtists=response.data.artists.artist;for(var i in topArtists)!function(j){var artist=topArtists[j].name;artistsService.getTopAlbums(artist,1,1).then(function(response){if(void 0===response.data.error){var rndAlbum=response.data.topalbums.album.pop();void 0!==rndAlbum&&($scope.albums[j]=rndAlbum,albumsService.getAlbumInfo(rndAlbum.artist.name,rndAlbum.name).then(function(response){void 0===response.data.error?void 0!==response.data.album&&($scope.albums[j].info=response.data.album,void 0!==response.data.album.image&&""!=response.data.album.image[0]["#text"]&&($scope.albums[j].image=response.data.album.image)):console.log(response)},function(errResponse){console.log(errResponse)}).finally(function(){0<$scope.albums.length&&"undefined"!==$scope.albums[j].image&&""==$scope.albums[j].image[0]["#text"]&&($scope.albums[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.albums[j].imgsDone=!0}))}else console.log(response)},function(errResponse){console.log(errResponse)})}(i)}else console.log(response)},function(errResponse){console.log(errResponse)})}(1,5),$scope.getAlbumSearch=function(album,page,limit){if(void 0===page)page=dft_page;if(void 0===limit)limit=dft_limit;void 0!==$scope.albumSearchAbort&&$scope.albumSearchAbort.resolve(),$scope.albumSearchAbort=$q.defer(),albumsService.getAlbumSearch(album,page,limit,$scope.albumSearchAbort.promise).then(function(response){if(void 0===response.data.error)for(var i in $scope.searchedAlbums=response.data.results.albummatches.album.slice(-limit),$scope.searchedAlbums)!function(j){albumsService.getAlbumInfo($scope.searchedAlbums[j].artist,$scope.searchedAlbums[j].name,$scope.albumSearchAbort.promise).then(function(response){void 0===response.data.error?void 0!==response.data.album&&($scope.searchedAlbums[j].info=response.data.album,void 0!==response.data.album.image&&""!=response.data.album.image[0]["#text"]&&($scope.searchedAlbums[j].image=response.data.album.image)):console.log(response.data)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)}).finally(function(){0<$scope.searchedAlbums.length&&"undefined"!==$scope.searchedAlbums[j].image&&""==$scope.searchedAlbums[j].image[0]["#text"]&&($scope.searchedAlbums[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.searchedAlbums[j].imgsDone=!0})}(i);else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)})},$scope.onSearch=function(searchKey){return void 0!==(key=searchKey)&&""!=key&&($location.search("search",searchKey),$scope.searchKey=searchKey,$scope.isSearch=!0,$scope.getAlbumSearch(searchKey,dft_page,dft_limit),!0);var key},$scope.onClose=function(){$scope.isSearch=!1},$scope.onPageChange=function(page){$scope.getAlbumSearch($scope.searchKey,page,dft_limit)},$scope.saveOnPlaylist=function(playlistId,videoData){$rootScope.$broadcast("userSaveTrack",{playlistId:playlistId,videoData:videoData})},$scope.ytVideo={open:function(videoData){$rootScope.$broadcast("ytPlayVideo",videoData)}},$scope.getArtistUrlFromString=function(strUrl){return"https://www.last.fm/music/"+strUrl.split("https://www.last.fm/music/")[1].split("/")[0]},$scope.stripLink=function(text){return text.replace(/<a(.|\n)*?<\/a>.?/,"").trim()},$scope.getSummaryLink=function(text){return text.match(/<a(.|\n)*?<\/a>/)[0].match(/href="(.|\n)*?"/)[0].replace('href="',"").replace('"',"")},$scope.searchFor=function(type,value){var encodedValue=encodeURIComponent(value);switch(type){case"track":return $rootScope.baseUrl+"#!/tracks?search="+encodedValue;case"artist":return $rootScope.baseUrl+"#!/artists?search="+encodedValue;case"album":return $rootScope.baseUrl+"#!/albums?search="+encodedValue;default:throw'Invalid video type "'+type+'"'}},$scope.backToTop=function(){scrollTo($$("#search-results")[0].offsetTop-$$("nav")[0].offsetHeight,600)}}),app.controller("ArtistsController",function($rootScope,$scope,$location,$q,artistsService,topsService){var dft_page=1,dft_limit=5;!function(page,limit){if(void 0===page)var page=dft_page;if(void 0===limit)var limit=dft_limit;topsService.getTopArtists(page,limit).then(function(response){if(void 0===response.data.error)for(var i in $scope.artists=response.data.artists.artist.slice(-limit),$scope.artists)!function(j){artistsService.getArtistInfo($scope.artists[j].name).then(function(response){void 0===response.data.error?void 0!==response.data.artist&&($scope.artists[j].info=response.data.artist,void 0!==response.data.artist.image&&""!=response.data.artist.image[0]["#text"]&&($scope.artists[j].image=response.data.artist.image)):console.log(response)},function(errResponse){console.log(errResponse)}).finally(function(){0<$scope.artists.length&&"undefined"!==$scope.artists[j].image&&""==$scope.artists[j].image[0]["#text"]&&($scope.artists[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.artists[j].imgsDone=!0})}(i);else console.log(response)},function(errResponse){console.log(errResponse)})}(1,5),$scope.getArtistSearch=function(artist,page,limit){if(void 0===page)page=dft_page;if(void 0===limit)limit=dft_limit;void 0!==$scope.artistSearchAbort&&$scope.artistSearchAbort.resolve(),$scope.artistSearchAbort=$q.defer(),artistsService.getArtistSearch(artist,page,limit,$scope.artistSearchAbort.promise).then(function(response){if(void 0===response.data.error)for(var i in $scope.searchedArtists=response.data.results.artistmatches.artist.slice(-limit),$scope.searchedArtists)!function(j){artistsService.getArtistInfo($scope.searchedArtists[j].name,$scope.artistSearchAbort.promise).then(function(response){void 0===response.data.error?void 0!==response.data.artist&&($scope.searchedArtists[j].info=response.data.artist,void 0!==response.data.artist.image&&""!=response.data.artist.image[0]["#text"]&&($scope.searchedArtists[j].image=response.data.artist.image)):console.log(response.data)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)}).finally(function(){0<$scope.searchedArtists.length&&"undefined"!==$scope.searchedArtists[j].image&&""==$scope.searchedArtists[j].image[0]["#text"]&&($scope.searchedArtists[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.searchedArtists[j].imgsDone=!0})}(i);else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)})},$scope.onSearch=function(searchKey){return void 0!==(key=searchKey)&&""!=key&&($location.search("search",searchKey),$scope.searchKey=searchKey,$scope.isSearch=!0,$scope.getArtistSearch(searchKey,dft_page,dft_limit),!0);var key},$scope.onClose=function(){$scope.isSearch=!1},$scope.onPageChange=function(page){$scope.getArtistSearch($scope.searchKey,page,dft_limit)},$scope.saveOnPlaylist=function(playlistId,videoData){$rootScope.$broadcast("userSaveTrack",{playlistId:playlistId,videoData:videoData})},$scope.ytVideo={open:function(videoData){$rootScope.$broadcast("ytPlayVideo",videoData)}},$scope.stripLink=function(text){return text.replace(/<a(.|\n)*?<\/a>.?/,"").trim()},$scope.searchFor=function(type,value){var encodedValue=encodeURIComponent(value);switch(type){case"track":return $rootScope.baseUrl+"#!/tracks?search="+encodedValue;case"artist":return $rootScope.baseUrl+"#!/artists?search="+encodedValue;case"album":return $rootScope.baseUrl+"#!/albums?search="+encodedValue;default:throw'Invalid video type "'+type+'"'}},$scope.backToTop=function(){scrollTo($$("#search-results")[0].offsetTop-$$("nav")[0].offsetHeight,600)}}),app.controller("HomeController",function($rootScope,$scope,$q,topsService,tracksService){var dft_page=1,dft_limit=5;$scope.getRandomTracks=function(limit){if(void 0===limit)limit=dft_limit;var page=1+Math.floor(20*Math.random());void 0!==$scope.randomTracksAbort&&$scope.randomTracksAbort.resolve(),$scope.randomTracksAbort=$q.defer(),topsService.getTopTracks(page,limit,$scope.randomTracksAbort.promise).then(function(response){if(void 0===response.data.error)for(var i in $scope.rndTracks=response.data.tracks.track.slice(-limit),$scope.rndTracks)!function(j){tracksService.getTrackInfo($scope.rndTracks[j].artist.name,$scope.rndTracks[j].name,$scope.randomTracksAbort.promise).then(function(response){void 0===response.data.error?void 0!==response.data.track&&($scope.rndTracks[j].info=response.data.track,void 0!==response.data.track.album&&""!=response.data.track.album.image[0]["#text"]&&($scope.rndTracks[j].image=response.data.track.album.image)):console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)}).finally(function(){0<$scope.rndTracks.length&&"undefined"!==$scope.rndTracks[j].image&&""==$scope.rndTracks[j].image[0]["#text"]&&($scope.rndTracks[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.rndTracks[j].imgsDone=!0})}(i);else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&($scope.rndTracks=$scope.tracks,console.log(errResponse))})},$scope.getRandomTracks(5),$scope.getTopTracks=function(page,limit){if(void 0===page)page=dft_page;if(void 0===limit)limit=dft_limit;var progressBar=$$("#tracks-wrapper .progress");angular.element(progressBar).removeClass("hide"),void 0!==$scope.topTracksAbort&&$scope.topTracksAbort.resolve(),$scope.topTracksAbort=$q.defer(),topsService.getTopTracks(page,limit,$scope.topTracksAbort.promise).then(function(response){if(angular.element(progressBar).addClass("hide"),void 0===response.data.error)for(var i in $scope.tracks=response.data.tracks.track.slice(-limit),$scope.tracks)!function(j){tracksService.getTrackInfo($scope.tracks[j].artist.name,$scope.tracks[j].name,$scope.topTracksAbort.promise).then(function(response){void 0===response.data.error?void 0!==response.data.track&&($scope.tracks[j].info=response.data.track,void 0!==response.data.track.album&&""!=response.data.track.album.image[0]["#text"]&&($scope.tracks[j].image=response.data.track.album.image)):console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)}).finally(function(){0<$scope.tracks.length&&"undefined"!==$scope.tracks[j].image&&""==$scope.tracks[j].image[0]["#text"]&&($scope.tracks[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.tracks[j].imgsDone=!0})}(i);else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&(angular.element(progressBar).addClass("hide"),console.log(errResponse))})},$scope.getTopArtists=function(page,limit){if(void 0===page)page=dft_page;void 0===limit&&(limit=dft_limit);var progressBar=$$("#artists-wrapper .progress");angular.element(progressBar).removeClass("hide"),void 0!==$scope.topArtistsAbort&&$scope.topArtistsAbort.resolve(),$scope.topArtistsAbort=$q.defer(),topsService.getTopArtists(page,limit,$scope.topArtistsAbort.promise).then(function(response){if(angular.element(progressBar).addClass("hide"),void 0===response.data.error)for(var i in $scope.artists=response.data.artists.artist.slice(-limit),$scope.artists)$scope.artists[i].imgsDone=!0;else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&(angular.element(progressBar).addClass("hide"),console.log(errResponse))})},$scope.getTopTags=function(page,limit){if(void 0===page)page=dft_page;if(void 0===limit)limit=dft_limit;var progressBar=$$("#tags-wrapper .progress");angular.element(progressBar).removeClass("hide"),void 0!==$scope.topTagsAbort&&$scope.topTagsAbort.resolve(),$scope.topTagsAbort=$q.defer(),topsService.getTopTags(page,limit,$scope.topTagsAbort.promise).then(function(response){if(angular.element(progressBar).addClass("hide"),void 0===response.data.error)for(var i in $scope.tags=response.data.tags.tag.slice(-limit),$scope.tags)!function(j){$scope.tags[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}],topsService.getTopArtistsByTag($scope.tags[j].name,page,limit,$scope.topTagsAbort.promise).then(function(response){void 0===response.data.error?$scope.tags[j].image=response.data.topartists.artist[0].image:console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)}).finally(function(){0<$scope.tags.length&&"undefined"!==$scope.tags[j].image&&""==$scope.tags[j].image[0]["#text"]&&($scope.tags[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.tags[j].imgsDone=!0})}(i);else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&(angular.element(progressBar).addClass("hide"),console.log(errResponse))})},$scope.searchFor=function(type,value){var encodedValue=encodeURIComponent(value);switch(type){case"track":return $rootScope.baseUrl+"#!/tracks?search="+encodedValue;case"artist":return $rootScope.baseUrl+"#!/artists?search="+encodedValue;case"album":return $rootScope.baseUrl+"#!/albums?search="+encodedValue;default:throw'Invalid video type "'+type+'"'}}}),app.controller("TracksController",function($rootScope,$scope,$location,$q,tracksService,topsService){var dft_page=1,dft_limit=5;!function(page,limit){if(void 0===page)var page=dft_page;if(void 0===limit)var limit=dft_limit;topsService.getTopTracks(page,limit).then(function(response){if(void 0===response.data.error)for(var i in $scope.tracks=response.data.tracks.track.slice(-limit),$scope.tracks)!function(j){tracksService.getTrackInfo($scope.tracks[j].artist.name,$scope.tracks[j].name).then(function(response){void 0===response.data.error?void 0!==response.data.track&&($scope.tracks[j].info=response.data.track,void 0!==response.data.track.album&&""!=response.data.track.album.image[0]["#text"]&&($scope.tracks[j].image=response.data.track.album.image)):console.log(response)},function(errResponse){console.log(errResponse)}).finally(function(){0<$scope.tracks.length&&"undefined"!==$scope.tracks[j].image&&""==$scope.tracks[j].image[0]["#text"]&&($scope.tracks[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.tracks[j].imgsDone=!0})}(i);else console.log(response)},function(errResponse){console.log(errResponse)})}(1,5),$scope.getTrackSearch=function(track,page,limit){if(void 0===page)page=dft_page;if(void 0===limit)limit=dft_limit;void 0!==$scope.trackSearchAbort&&$scope.trackSearchAbort.resolve(),$scope.trackSearchAbort=$q.defer(),tracksService.getTrackSearch(track,page,limit,$scope.trackSearchAbort.promise).then(function(response){if(void 0===response.data.error)for(var i in $scope.searchedTracks=response.data.results.trackmatches.track.slice(-limit),$scope.searchedTracks)!function(j){tracksService.getTrackInfo($scope.searchedTracks[j].artist,$scope.searchedTracks[j].name,$scope.trackSearchAbort.promise).then(function(response){void 0===response.data.error?void 0!==response.data.track&&($scope.searchedTracks[j].info=response.data.track,void 0!==response.data.track.album&&""!=response.data.track.album.image[0]["#text"]&&($scope.searchedTracks[j].image=response.data.track.album.image)):console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)}).finally(function(){0<$scope.searchedTracks.length&&"undefined"!==$scope.searchedTracks[j].image&&""==$scope.searchedTracks[j].image[0]["#text"]&&($scope.searchedTracks[j].image=[{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg},{"#text":$rootScope.fallbackImg}]),$scope.searchedTracks[j].imgsDone=!0})}(i);else console.log(response)},function(errResponse){"abort"!=errResponse.xhrStatus&&console.log(errResponse)})},$scope.onSearch=function(searchKey){return void 0!==(key=searchKey)&&""!=key&&($location.search("search",searchKey),$scope.searchKey=searchKey,$scope.isSearch=!0,$scope.getTrackSearch(searchKey,dft_page,dft_limit),!0);var key},$scope.onClose=function(){$scope.isSearch=!1},$scope.onPageChange=function(page){$scope.getTrackSearch($scope.searchKey,page,dft_limit)},$scope.saveOnPlaylist=function(playlistId,videoData){$rootScope.$broadcast("userSaveTrack",{playlistId:playlistId,videoData:videoData})},$scope.ytVideo={open:function(videoData){$rootScope.$broadcast("ytPlayVideo",videoData)}},$scope.formatDuration=function(time){var minutes=Math.floor(time/60/1e3),seconds=Math.round(60*(time/60/1e3-Math.floor(time/60/1e3)));return minutes+":"+(seconds=seconds<10?seconds+"0":seconds)},$scope.stripLink=function(text){return text.replace(/<a(.|\n)*?<\/a>.?/,"").trim()},$scope.getSummaryLink=function(text){return text.match(/<a(.|\n)*?<\/a>/)[0].match(/href="(.|\n)*?"/)[0].replace('href="',"").replace('"',"")},$scope.searchFor=function(type,value){var encodedValue=encodeURIComponent(value);switch(type){case"track":return $rootScope.baseUrl+"#!/tracks?search="+encodedValue;case"artist":return $rootScope.baseUrl+"#!/artists?search="+encodedValue;case"album":return $rootScope.baseUrl+"#!/albums?search="+encodedValue;default:throw'Invalid video type "'+type+'"'}},$scope.backToTop=function(){scrollTo($$("#search-results")[0].offsetTop-$$("nav")[0].offsetHeight,600)}}),app.controller("UserPlaylistsController",function($rootScope,$scope,$route,$timeout,$location,userService){$scope.state={renamingPlaylist:!1,tempName:""},$scope.$parent.sessionLoginResponse.then(function(response){userService.user.isLogged?($scope.playlists=userService.savedPlaylists.getAllPlaylists().sort(function(a,b){return new Date(b.date)-new Date(a.date)}),function(){var pl=0;if(void 0!==$location.search().pl){var tempPl=$location.search().pl;void 0!==$scope.playlists[tempPl]&&(pl=parseInt(tempPl))}void 0!==$scope.playlists[pl]&&($scope.activePlaylist={playlistId:$scope.playlists[pl].playlistId,name:$scope.playlists[pl].name,list:$scope.playlists[pl].list,index:pl})}()):($location.search("pl",null),$location.path("/"))},function(errResponse){console.log(errResponse)}),$scope.selectPlaylist=function(playlistId){var playlist=userService.savedPlaylists.getPlaylist(playlistId),index=userService.savedPlaylists.getIndexId(playlistId);$scope.activePlaylist={playlistId:playlist.playlistId,name:playlist.name,list:playlist.list,index:index},"number"==typeof index&&index%1==0&&0<=index?$location.search("pl",index):$location.search("pl",null)},$scope.deletePlaylist=function(playlistId){window.confirm("This action is irreversible. Do you want to proceed?")&&userService.savedPlaylists.deletePlaylist(playlistId).then(function(response){if(void 0!==response.data.PlaylistID){M.toast({html:"Playlist deleted",displayLength:"2000"});var index=userService.savedPlaylists.getIndexId(playlistId),prev=0==index?userService.savedPlaylists.getAllPlaylists().length-1:index-1;$location.search("pl",prev),$route.reload()}else M.toast({html:"Error on playlist deletion",classes:"red darken-4",displayLength:"2000"}),console.log(response)},function(errResponse){M.toast({html:"Error on playlist deletion",classes:"red darken-4",displayLength:"2000"}),console.log(errResponse)})},$scope.renamePlaylist=function(playlistId,newName){$scope.state.renamingPlaylist=!1,newName=$scope.state.tempName,userService.savedPlaylists.renamePlaylist(playlistId,newName).then(function(response){void 0!==response.data.PlaylistID?(M.toast({html:"Playlist renamed",displayLength:"2000"}),$route.reload()):(M.toast({html:"Error on playlist creation",classes:"red darken-4",displayLength:"2000"}),console.log(response))},function(errResponse){M.toast({html:"Error on playlist creation",classes:"red darken-4",displayLength:"2000"}),console.log(errResponse)})},$scope.removeTrack=function(playlistId,trackId){userService.savedPlaylists.removeTrack(playlistId,trackId).then(function(response){void 0!==response.data.TrackID||(M.toast({html:"Error on track removal",classes:"red darken-4",displayLength:"2000"}),console.log(response))},function(errResponse){M.toast({html:"Error on track removal",classes:"red darken-4",displayLength:"2000"}),console.log(errResponse)})},$scope.changeTrackPosition=function(playlistId,trackId,direction){userService.savedPlaylists.changeTrackPosition(playlistId,trackId,direction).then(function(response){void 0!==response.data.TrackID||(M.toast({html:"Error on position alteration",classes:"red darken-4",displayLength:"2000"}),console.log(response))},function(errResponse){M.toast({html:"Error on position alteration",classes:"red darken-4",displayLength:"2000"}),console.log(errResponse)})},$scope.ytVideo={open:function(videoData){$rootScope.$broadcast("ytPlayVideo",videoData)},playCustomPlaylist:function(playlistId){0<$scope.activePlaylist.list.length&&$rootScope.$broadcast("ytPlayCustomPlaylist",userService.savedPlaylists.getPlaylist(playlistId).list)}},$scope.showInput=function(){$scope.state.renamingPlaylist=!0,setTimeout(function(){$$(".playlist-name input")[0].focus()},100)},$scope.onBlur=function(){$timeout(function(){$scope.state.renamingPlaylist=!1},1e3)},$scope.$watch("state.tempName",function(newVal,oldVal){oldVal!==newVal&&"314159"==newVal&&($scope.easterEgg=!0)}),$scope.downloadPlaylist=function(playlistId){var playlist=userService.savedPlaylists.getPlaylist(playlistId);for(var i in playlist.list){var track=playlist.list[i];window.open("https://www.yout.com/video/"+track.videoId,"_blank")}},$scope.downloadTrack=function(videoId){window.open("https://www.yout.com/video/"+videoId,"_blank")}}),app.controller("UserSettingsController",function($rootScope,$scope,$location,$route,userService,FileUploader){$scope.$parent.sessionLoginResponse.then(function(response){userService.user.isLogged?($scope.userSecure=userService.userSecure,$scope.userChangeable={initialName:userService.user.name,name:userService.user.name,avatar:userService.user.avatar,oldPassword:"",newPassword:""},$scope.userDelete={password:""},$scope.instances={modals:M.Modal.init($$("main .modal"),{})}):$location.path("/")},function(errResponse){console.log(errResponse)});M.Tooltip.init($$(".tooltipped"),{});$scope.uploader=new FileUploader({alias:"avatar",queueLimit:1,removeAfterUpload:!0}),$scope.uploader.onAfterAddingFile=function(item){item.url=$rootScope.baseUrl+"src/php/settings.avatar.php",item.formData=[{userId:userService.userSecure.userId}];var oldImg=$$("#avatar-img")[0],file=item._file,newImg=document.createElement("img");newImg.id="avatar-img",newImg.file=file,oldImg.parentNode.replaceChild(newImg,oldImg);var aImg,reader=new FileReader;reader.onload=(aImg=newImg,function(e){aImg.src=e.target.result}),reader.readAsDataURL(file)},$scope.uploader.onWhenAddingFileFailed=function(item,filter,options){"queueLimit"==filter.name&&($scope.uploader.clearQueue(),$scope.uploader.addToQueue(item))},$scope.onSubmit=function(){var changing=[];0!=$scope.uploader.queue.length&&(changing.push("avatar"),$scope.uploader.queue[0].onSuccess=function(response,status,headers){void 0!==response.UserID?($scope.$apply(function(){$$("#avatar-img")[0].src=$scope.userChangeable.avatar=userService.user.avatar=response.Avatar+"?_="+(new Date).getTime()}),M.toast({html:"Avatar changed",displayLength:"2000"})):(console.log(response),M.toast({html:"Error on avatar change",classes:"red darken-4",displayLength:"2000"}))},$scope.uploader.uploadItem(0));""==$scope.userChangeable.oldPassword&&""==$scope.userChangeable.newPassword||(changing.push("password"),""!=$scope.userChangeable.oldPassword&&""!=$scope.userChangeable.newPassword&&$scope.userChangeable.newPassword!=$scope.userChangeable.oldPassword?userService.changePassword({userId:userService.userSecure.userId,oldPassword:$scope.userChangeable.oldPassword,newPassword:$scope.userChangeable.newPassword}).then(function(response){void 0!==response.data.UserID?M.toast({html:"Password changed",displayLength:"2000"}):(console.log(response),M.toast({html:"Error on password change",classes:"red darken-4",displayLength:"2000"}))},function(errResponse){console.log(errResponse),M.toast({html:"Error on password change",classes:"red darken-4",displayLength:"2000"})}):M.toast({html:"Error on password change",classes:"red darken-4",displayLength:"2000"})),$scope.userChangeable.name!=$scope.userChangeable.initialName&&(changing.push("name"),userService.changeName({userId:userService.userSecure.userId,newName:$scope.userChangeable.name}).then(function(response){void 0!==response.data.UserID?($scope.userChangeable.initialName=$scope.userChangeable.name=userService.user.name=response.data.Name,M.toast({html:"Name changed",displayLength:"2000"})):(console.log(response),M.toast({html:"Error on name change",classes:"red darken-4",displayLength:"2000"}))},function(errResponse){console.log(errResponse),M.toast({html:"Error on name change",classes:"red darken-4",displayLength:"2000"})})),0==changing.length&&M.toast({html:"No change has been made",classes:"red darken-4",displayLength:"2000"})},$scope.deleteAccount=function(){if(""!=$scope.userDelete.password){var data={userId:userService.userSecure.userId,password:$scope.userDelete.password};userService.deleteAccount(data).then(function(response){void 0!==response.data.UserID?($scope.instances.modals[0].close(),angular.element($$("body")).scope().userMethods.logOut(),M.toast({html:"Account permanently deleted",displayLength:"2000"})):(console.log(response),M.toast({html:"Error on account deletion",classes:"red darken-4",displayLength:"2000"}))},function(errResponse){console.log(errResponse),M.toast({html:"Error on account deletion",classes:"red darken-4",displayLength:"2000"})})}else M.toast({html:"Invalid password",classes:"red darken-4",displayLength:"2000"})}});
//# sourceMappingURL=app.min.js.map